#############################################################################
# Makefile for building: camera
# Generated by qmake (2.01a) (Qt 4.6.2) on: So 6. Jun 20:25:10 2010
# Project:  camera.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -DQT_DLL -DQT_NO_DEBUG -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_THREAD_SUPPORT
CFLAGS        = -O2 -Wall $(DEFINES)
CXXFLAGS      = -O2 -frtti -fexceptions -mthreads -Wall $(DEFINES)
INCPATH       = -I"c:\Programme\Qt\2010.02.1\qt\include\QtCore" -I"c:\Programme\Qt\2010.02.1\qt\include\QtGui" -I"c:\Programme\Qt\2010.02.1\qt\include\QtOpenGL" -I"c:\Programme\Qt\2010.02.1\qt\include" -I"c:\Programme\Qt\2010.02.1\qt\include\ActiveQt" -I"release" -I"c:\Programme\Qt\2010.02.1\qt\mkspecs\win32-g++"
LINK        =        g++
LFLAGS        =        -enable-stdcall-fixup -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc -Wl,-s -Wl,-subsystem,console -mthreads -Wl
LIBS        =        -L"c:\Programme\Qt\2010.02.1\qt\lib" -lopengl32 -lglu32 -lgdi32 -luser32 -lQtOpenGL4 -lQtGui4 -lQtCore4 
QMAKE         = c:\programme\qt\2010.02.1\qt\bin\qmake.exe
IDC           = c:\Programme\Qt\2010.02.1\qt\bin\idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = release

####### Files

SOURCES       = translatenode.cpp \
		transformnode.cpp \
		scene.cpp \
		scalenode.cpp \
		rotatenode.cpp \
		node.cpp \
		myglwidget.cpp \
		main.cpp \
		geometrynode.cpp \
		boxnode.cpp \
		rootnode.cpp \
		cameranode.cpp release\moc_myglwidget.cpp
OBJECTS       = release/translatenode.o \
		release/transformnode.o \
		release/scene.o \
		release/scalenode.o \
		release/rotatenode.o \
		release/node.o \
		release/myglwidget.o \
		release/main.o \
		release/geometrynode.o \
		release/boxnode.o \
		release/rootnode.o \
		release/cameranode.o \
		release/moc_myglwidget.o
DIST          = 
QMAKE_TARGET  = camera
DESTDIR        = release\ #avoid trailing-slash linebreak
TARGET         = camera.exe
DESTDIR_TARGET = release\camera.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Release  $(DESTDIR_TARGET)

$(DESTDIR_TARGET):  $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) object_script.camera.Release  $(LIBS)


qmake:  FORCE
	@$(QMAKE) -spec c:\Programme\Qt\2010.02.1\qt\mkspecs\win32-g++ -win32 -o Makefile.Release camera.pro

dist:
	$(ZIP) camera.zip $(SOURCES) $(DIST) camera.pro c:\Programme\Qt\2010.02.1\qt\mkspecs\qconfig.pri c:\Programme\Qt\2010.02.1\qt\mkspecs\features\qt_functions.prf c:\Programme\Qt\2010.02.1\qt\mkspecs\features\qt_config.prf c:\Programme\Qt\2010.02.1\qt\mkspecs\features\exclusive_builds.prf c:\Programme\Qt\2010.02.1\qt\mkspecs\features\default_pre.prf c:\Programme\Qt\2010.02.1\qt\mkspecs\features\win32\default_pre.prf c:\Programme\Qt\2010.02.1\qt\mkspecs\features\release.prf c:\Programme\Qt\2010.02.1\qt\mkspecs\features\debug_and_release.prf c:\Programme\Qt\2010.02.1\qt\mkspecs\features\default_post.prf c:\Programme\Qt\2010.02.1\qt\mkspecs\features\win32\default_post.prf c:\Programme\Qt\2010.02.1\qt\mkspecs\features\build_pass.prf c:\Programme\Qt\2010.02.1\qt\mkspecs\features\win32\console.prf c:\Programme\Qt\2010.02.1\qt\mkspecs\features\win32\rtti.prf c:\Programme\Qt\2010.02.1\qt\mkspecs\features\win32\exceptions.prf c:\Programme\Qt\2010.02.1\qt\mkspecs\features\win32\stl.prf c:\Programme\Qt\2010.02.1\qt\mkspecs\features\shared.prf c:\Programme\Qt\2010.02.1\qt\mkspecs\features\warn_on.prf c:\Programme\Qt\2010.02.1\qt\mkspecs\features\qt.prf c:\Programme\Qt\2010.02.1\qt\mkspecs\features\win32\opengl.prf c:\Programme\Qt\2010.02.1\qt\mkspecs\features\win32\thread.prf c:\Programme\Qt\2010.02.1\qt\mkspecs\features\moc.prf c:\Programme\Qt\2010.02.1\qt\mkspecs\features\resources.prf c:\Programme\Qt\2010.02.1\qt\mkspecs\features\uic.prf c:\Programme\Qt\2010.02.1\qt\mkspecs\features\yacc.prf c:\Programme\Qt\2010.02.1\qt\mkspecs\features\lex.prf c:\Programme\Qt\2010.02.1\qt\mkspecs\features\include_source_dir.prf  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) release\translatenode.o release\transformnode.o release\scene.o release\scalenode.o release\rotatenode.o release\node.o release\myglwidget.o release\main.o release\geometrynode.o release\boxnode.o release\rootnode.o release\cameranode.o release\moc_myglwidget.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Release

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: release/moc_myglwidget.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) release\moc_myglwidget.cpp
release/moc_myglwidget.cpp: myglwidget.h
	C:/Programme/Qt/2010.02.1/qt/bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 myglwidget.h -o release\moc_myglwidget.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 



####### Compile

release/translatenode.o: translatenode.cpp translatenode.h \
		transformnode.h \
		node.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\translatenode.o translatenode.cpp

release/transformnode.o: transformnode.cpp transformnode.h \
		node.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\transformnode.o transformnode.cpp

release/scene.o: scene.cpp scene.h \
		rootnode.h \
		node.h \
		cameranode.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\scene.o scene.cpp

release/scalenode.o: scalenode.cpp scalenode.h \
		transformnode.h \
		node.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\scalenode.o scalenode.cpp

release/rotatenode.o: rotatenode.cpp rotatenode.h \
		transformnode.h \
		node.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\rotatenode.o rotatenode.cpp

release/node.o: node.cpp node.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\node.o node.cpp

release/myglwidget.o: myglwidget.cpp myglwidget.h \
		scene.h \
		rootnode.h \
		node.h \
		cameranode.h \
		boxnode.h \
		geometrynode.h \
		translatenode.h \
		transformnode.h \
		rotatenode.h \
		scalenode.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\myglwidget.o myglwidget.cpp

release/main.o: main.cpp myglwidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\main.o main.cpp

release/geometrynode.o: geometrynode.cpp geometrynode.h \
		node.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\geometrynode.o geometrynode.cpp

release/boxnode.o: boxnode.cpp boxnode.h \
		geometrynode.h \
		node.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\boxnode.o boxnode.cpp

release/rootnode.o: rootnode.cpp rootnode.h \
		node.h \
		cameranode.h \
		transformnode.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\rootnode.o rootnode.cpp

release/cameranode.o: cameranode.cpp cameranode.h \
		node.h \
		transformnode.h \
		boxnode.h \
		geometrynode.h \
		rotatenode.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\cameranode.o cameranode.cpp

release/moc_myglwidget.o: release/moc_myglwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_myglwidget.o release\moc_myglwidget.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

