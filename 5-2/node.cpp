#include "node.h"


/******************************************************************************/
/******************************************************************************/
std::string type = "Node";


Node::Node(){

}

Node::~Node(){

}

/******************************************************************************/
/******************************************************************************/

void Node::apply()
{
    applySelf();

    for (unsigned int i = 0; i < children.size(); i++)
    {
        glPushMatrix();
        children[i]->apply();
        glPopMatrix();
    }
}

/******************************************************************************/

void Node::applySelf()
{


    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluPerspective(45,1,1,1000);

    glMatrixMode(GL_MODELVIEW);
    glLoadIdentity();

    glTranslated(0,0,-10);
}

/******************************************************************************/
/******************************************************************************/

void Node::addChild(Node *child)
{
/*
    if(children.size() == 0)
    {
        children();
    }
    */
    children.push_back(child);
}

/******************************************************************************/

void Node::setParent(Node* node)
{
    parent = node;
}

/******************************************************************************/
/******************************************************************************/

std::vector<Node*> Node::getChildren()
{
    return children;
}

/******************************************************************************/

std::string Node::getName()
{
    return name;
}

/******************************************************************************/

std::string Node::getType()
{
    return type;
}

/******************************************************************************/

Node* Node::getParent()
{
    return parent;
}


